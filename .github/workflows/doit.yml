name: Update data & upload

on:
  push:
    branches: [ "main", "dev" ]
  schedule:
    - cron: "29 * * * *"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest poetry
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Setup pypoetry cache
        uses: actions/cache@v2
        timeout-minutes: 5
        with:
          path: ~/AppData/Local/pypoetry/Cache
          key: ${{ runner.os }}-pypoetry-${{ hashFiles('**/requirements.txt') }}${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pypoetry-
      - name: Run Poetry
        run: |
          python -m poetry install

      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Get current week news
        run: |
          mkdir -p 'ecs' &&
          python -m poetry run python get_current_week_news.py > ecs/news.json

      - name: Upload News Artifact
        uses: actions/upload-artifact@v3
        with:
          name: news
          path: ecs/news.json
          retention-days: 1

      - name: Push directory to another repository
        uses: cpina/github-action-push-to-another-repository@v1.5.1
        with:
          source-directory: ecs
          destination-github-username: maxisoft-data
          user-name: maxisoft-data
          user-email: maxisoft.eu+data@gmail.com
          destination-repository-name: economy-calendar
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
