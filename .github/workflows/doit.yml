# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "main", "dev" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Setup pypoetry cache
      uses: actions/cache@v2
      timeout-minutes: 5
      with:
        path: ~/AppData/Local/pypoetry/Cache
        key: ${{ runner.os }}-pypoetry-${{ hashFiles('**/requirements.txt') }}${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pypoetry-
    - name: Run Poetry
      run: |
            python -m poetry install
            
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: get current week news
      run: |
        mkdir -p '/tmp/ecs'
        python -m poetry run python get_current_week_news.py > /tmp/ecs/news.json

    - name: save latest news to git
      run: |
        python -m poetry run python save_to_git.py
      env:
        WORKING_DIRECTORY: /tmp/ecs

    - name: Push directory to another repository
      uses: cpina/github-action-push-to-another-repository@v1.5.1
      with:
        source-directory: /tmp/ecs
        destination-github-username: maxisoft-data
        destination-repository-name: economy-calendar
      env:
        SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
